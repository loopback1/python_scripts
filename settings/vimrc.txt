" NEW SETUP BEGIN
"
" mkdir -p ~/.vim/bundle && mkdir -p ~/.tmp && mkdir -p ~/Dropbox/notes
" mkdir -p ~/.vim/UltiSnips
" 
" sudo apt install build-essential libssl-dev libffi-dev python-dev
" sudo apt install cmake python-dev3
" sudo apt-get install ruby ruby-dev libncurses5-dev mercurial clone build-essential rake
" 
" git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
"
" cd ~/.vim/bundle/command-t
" rake make
"
" cd ~/.vim/bundle/YouCompleteMe
" ./install.py --clang-completer
"
"
"
" NEW SETUP END
"
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize

set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" let Vundle manage Vundle, required

Plugin 'VundleVim/Vundle.vim'

Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'scrooloose/nerdtree'
" Plugin 'vim-scripts/indentpython.vim'
Plugin 'vim-syntastic/syntastic'
Plugin 'Yggdroot/indentLine'
Plugin 'tpope/vim-surround'
Plugin 'wincent/command-t'
Plugin 'jiangmiao/auto-pairs'
"Plugin 'christoomey/vim-tmux-navigator'

" allow ultisnips YCM and supertab integration
Bundle 'ervandew/supertab'
Bundle 'Valloric/YouCompleteMe'
Bundle 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

" color theme
Plugin 'nanotech/jellybeans.vim'

" plugins above this line
call vundle#end()            " required


" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
" mkdir -p ~/.vim/UltiSnips
let g:UltiSnipsSnippetDirectories=['~/.vim/UltiSnips', 'UltiSnips']
let g:UltiSnipsEditSplit="vertical"

" AirlineTheme
let g:airline_theme='powerlineish'
" let g:airline_theme='bubblegum'

filetype plugin indent on

set shiftwidth=4

"set expandtab
set number
" set relativenumber
set laststatus=2
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<,space:.
syntax on

" vim-airline 
let g:airline_powerline_fonts = 1

" command-t max files to search
let g:CommandTMaxFiles=200000

" nerdtree
map <C-\> :NERDTreeToggle<CR>

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" add key mappings here

" python - F9 to execute python script
nnoremap <buffer> <F9> :exec '!python' shellescape(@%, 1)<cr>

" YMAL indentation
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

" auto close brackets, parenthesis etc
" inoremap ( ()<Esc>i
" inoremap [ []<Esc>i
" inoremap { {}<Esc>i

" encryption use :X to set encryption key :set key= , to reset"
set cm=blowfish2

" default register size bump"
set viminfo='20,<1000,s1000
set t_Co=256


" show incomplete commands as they are typed, e.x. 2yy
set showcmd

" set incremental search, highlights you are searching
set incsearch

" better line wrapping
" set lbr

" set autoindent
"set ai
" set smart indent, useful for coding
"set si

" tell vim what background you have for proper syntax highlighting
" set bg=light
" set bg=dark
"
" map KEY strokes
" map <F2> itest<CR>  
" allow switching buffers with out saving first

set hidden

" change C-a and C-x behavior to use decimal and ignore octal
" additon and subtraction

set nrformats-=octal

runtime macros/matchit.vim

filetype plugin indent on    " required

" IndentLine enabled by default
let g:indentLine_enabled = 1

imap jj <ESC>
nmap k gk
nmap j gj

" colorscheme
colorscheme jellybeans

let mapleader = ","

set viminfo+=!
set autoindent
" set smarttab
set noesckeys
set ttimeout
set ttimeoutlen=1

" ignore this in searches
set wildignore+=*.a,*.o
set wildignore+=*.bmp,*.jpg,*.png,*.gif
set wildignore+=*.swp,*.mp4,*.mp3,*.avi
set wildignore+=tmp/**

" Highlight the status line
highlight StatusLine ctermfg=blue ctermbg=yellow

" better copy & paste
set pastetoggle=<F2>
set clipboard=unnamed

" Quickfix management
map <Space><Space> :ccl<cr>

" dont clutter my dirs with tmp and swp files | mkdir -p ~/.tmp
set directory=~/.tmp
set backupdir=~/.tmp

set autoread

" set gutter background to black
highlight SignColumn ctermbg=black

" disable this keys
map K <Nop>

" add black line to mark 80/column
" set colorcolumn=80
" highlight ColorColumn ctermbg=235

set shiftround " When at 3 spaces and I hit >>, go to 4, not 5.

set nofoldenable " Say no to code folding...

" Display extra whitespace
" set list listchars=tab:»·,trail:·

" By default, vim thinks .md is Modula-2.
autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" Without this, vim breaks in the middle of words when wrapping
autocmd FileType markdown setlocal nolist wrap lbr

" leader mappings 
map <Leader>gw :!git add . && git commit -m 'updating stuff' && git push<cr>
map <Leader>ws :silent w !sudo tee % > /dev/null<cr>
map <Leader>bp :!bpython -i %<cr>
map <Leader>sh :sh 
map <Leader>dr :e ~/Dropbox<cr>
map <Leader>an :e ~/Dropbox/notes/ansible-notes.md<cr>
map <Leader>pn :e ~/Dropbox/notes/personal-notes.md<cr>
map <Leader>wn :e ~/Dropbox/notes/work-notes.md<cr>
map <Leader>sn :e ~/Dropbox/notes/speed-notes.md<cr>
map <Leader>cn :e ~/Dropbox/notes/current-project-notes.md<cr>
